[setup]
population = 250 # number of networks

[setup.dimension]
input = 4 # number inputs
output = 1 # number outputs

[initialization]
output = "Tanh" # activation function of output nodes
activations = [
    "Linear",
    "Sigmoid",
    "Tanh",
    "Gaussian",
    "Step",
    "Sine",
    "Cosine",
    "Inverse",
    "Absolute",
    "Relu",
    "Squared",
] # pool of activation functions to choose from
connections = 1.0 # percent of inputs fully connected to outputs
weights = "Random" # initial value of weights

[reproduction]
offspring_from_crossover = 0.75 # proportion of offspring that results from crossover
offspring_from_crossover_interspecies = 0.001 # proportion of crossover that is interspecies
surviving = 0.3 # allow the top x percent of species to survive and reproduce
stale_after = 15 # number of generations allowed without improvement (stale species are reproduced only by the top performing member)

[mutation]
gene_node = 0.03 # chance of adding a new node gene
gene_connection = 0.05 # chance of adding a new connection gene
recurrent = 0.5
weight = 0.8 # chance of mutating all weights of a genome
weight_random = 0.1 # chance that a mutated weight is replaced by a totally random one
weight_perturbation = 1.0 # amount of perturbation (step up or down, uniformly distibuted)
weight_distribution = "Uniform" # probability distribution of perturbation
activation_change = 0.02

[compatability]
target_species = 25 # number of desired species
threshold = 1.0 # difference above threshold is considered incompatible
threshold_delta = 0.005 # adjust threshold by x if num species unequal target species
factor_genes = 2.5 # factor for number of different genes
factor_weights = 1.5 # factor for average weight difference of common genes
factor_activations = 0.5
